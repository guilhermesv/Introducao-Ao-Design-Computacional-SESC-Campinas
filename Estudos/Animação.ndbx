<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="21" type="file" uuid="b6dbd0b4-993a-42b2-8315-d85af7973929">
    <property name="canvasHeight" value="1000"/>
    <property name="canvasWidth" value="1000"/>
    <property name="canvasX" value="0"/>
    <property name="canvasY" value="0"/>
    <node name="root" prototype="core.network" renderedChild="combine1">
        <node name="arc1" position="9.00,9.00" prototype="corevector.arc">
            <port name="width" type="float" value="800.0"/>
            <port name="height" type="float" value="800.0"/>
        </node>
        <node name="arc2" position="22.00,9.00" prototype="corevector.arc">
            <port name="width" type="float" value="800.0"/>
            <port name="height" type="float" value="800.0"/>
        </node>
        <node name="colorize1" position="3.00,16.00" prototype="corevector.colorize"/>
        <node name="colorize2" position="8.00,15.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#ff8484ff"/>
        </node>
        <node name="combine1" position="4.00,18.00" prototype="list.combine"/>
        <node name="compound1" position="8.00,10.00" prototype="corevector.compound">
            <port name="function" type="string" value="intersected"/>
        </node>
        <node name="compound2" position="21.00,10.00" prototype="corevector.compound">
            <port name="function" type="string" value="intersected"/>
        </node>
        <node name="copy1" position="3.00,13.00" prototype="corevector.copy">
            <port name="copies" type="int" value="6"/>
        </node>
        <node name="copy2" position="16.00,13.00" prototype="corevector.copy">
            <port name="copies" type="int" value="6"/>
        </node>
        <node name="divide1" position="7.00,5.00" prototype="math.divide">
            <port name="value1" type="float" value="360.0"/>
        </node>
        <node name="divide2" position="9.00,7.00" prototype="math.divide">
            <port name="value2" type="float" value="2.0"/>
        </node>
        <node name="divide3" position="20.00,5.00" prototype="math.divide">
            <port name="value1" type="float" value="360.0"/>
        </node>
        <node name="divide4" position="22.00,7.00" prototype="math.divide">
            <port name="value2" type="float" value="2.0"/>
        </node>
        <node name="first1" position="14.00,0.00" prototype="list.first"/>
        <node name="frame1" position="15.00,-4.00" prototype="core.frame"/>
        <node name="freehand1" position="3.00,6.00" prototype="corevector.freehand">
            <port name="path" type="string" value="M3.50,-1.50  3.50,-4.50  7.50,-9.50  8.50,-12.50  11.50,-16.50  13.50,-20.50  15.50,-24.50  16.50,-27.50  20.50,-32.50  23.50,-36.50  28.50,-42.50  33.50,-46.50  36.50,-50.50  39.50,-54.50  41.50,-56.50  42.50,-59.50  44.50,-62.50  44.50,-67.50  44.50,-72.50  44.50,-78.50  42.50,-85.50  39.50,-91.50  36.50,-98.50  31.50,-104.50  27.50,-111.50  24.50,-116.50  22.50,-119.50  20.50,-123.50  17.50,-128.50  14.50,-131.50  11.50,-134.50  11.50,-134.50  11.50,-136.50  11.50,-137.50  11.50,-138.50  10.50,-139.50  8.50,-140.50  7.50,-143.50  4.50,-148.50  0.50,-151.50  -3.50,-154.50  -9.50,-158.50  -11.50,-159.50  -11.50,-161.50  -11.50,-162.50  -13.50,-165.50  -16.50,-166.50  -17.50,-168.50  -20.50,-170.50  -23.50,-171.50  -26.50,-174.50  -29.50,-175.50  -33.50,-177.50  -38.50,-180.50  -42.50,-181.50  -45.50,-182.50  -49.50,-183.50  -50.50,-185.50  -51.50,-185.50  -52.50,-185.50  -53.50,-185.50  -54.50,-185.50  -57.50,-185.50  -63.50,-185.50  -69.50,-185.50  -72.50,-184.50  -76.50,-182.50  -79.50,-180.50  -83.50,-177.50  -87.50,-176.50  -91.50,-173.50  -94.50,-171.50  -97.50,-168.50  -100.50,-167.50  -104.50,-165.50  -106.50,-164.50  -111.50,-161.50  -115.50,-159.50  -120.50,-158.50  -126.50,-156.50  -132.50,-153.50  -135.50,-151.50  -138.50,-149.50  -140.50,-145.50  -143.50,-141.50  -146.50,-137.50  -149.50,-133.50  -153.50,-128.50  -156.50,-125.50  -158.50,-122.50  -160.50,-118.50  -161.50,-115.50  -164.50,-111.50  -166.50,-107.50  -169.50,-104.50  -171.50,-100.50  -172.50,-96.50  -172.50,-92.50  -175.50,-85.50  -179.50,-75.50  -189.50,-58.50  -195.50,-40.50  -198.50,-25.50  -203.50,-14.50  -203.50,-7.50  -205.50,1.50  -206.50,8.50  -206.50,14.50  -206.50,22.50  -206.50,31.50  -206.50,42.50  -206.50,52.50  -206.50,62.50  -203.50,74.50  -203.50,83.50  -200.50,92.50  -198.50,103.50  -195.50,113.50  -193.50,122.50  -190.50,129.50  -188.50,137.50  -186.50,144.50  -183.50,150.50  -180.50,156.50  -178.50,162.50  -175.50,167.50  -172.50,173.50  -165.50,180.50  -158.50,187.50  -149.50,194.50  -138.50,200.50  -129.50,206.50  -121.50,209.50  -112.50,212.50  -100.50,217.50  -87.50,220.50  -69.50,224.50  -49.50,228.50  -39.50,231.50  -34.50,232.50  -29.50,232.50  -21.50,232.50  -8.50,232.50  11.50,232.50  34.50,232.50  59.50,233.50  75.50,233.50  84.50,233.50  88.50,233.50  89.50,233.50  90.50,231.50  93.50,222.50  97.50,209.50  102.50,198.50  107.50,190.50  110.50,184.50  114.50,177.50  118.50,168.50  122.50,163.50  129.50,157.50  135.50,153.50  148.50,146.50  162.50,136.50  177.50,127.50  191.50,120.50  204.50,118.50  216.50,116.50  228.50,116.50  243.50,118.50  254.50,120.50  263.50,121.50  269.50,122.50  275.50,122.50  279.50,122.50  282.50,122.50  285.50,120.50  286.50,119.50  288.50,115.50  289.50,112.50  292.50,105.50  297.50,97.50  300.50,87.50  303.50,77.50  308.50,65.50  315.50,52.50  323.50,40.50  330.50,29.50  334.50,23.50  339.50,15.50  344.50,8.50  347.50,0.50  350.50,-5.50  353.50,-13.50  355.50,-21.50  355.50,-27.50  356.50,-33.50  357.50,-39.50  358.50,-47.50  358.50,-56.50  357.50,-68.50  351.50,-86.50  342.50,-111.50  332.50,-139.50  323.50,-166.50  314.50,-190.50  302.50,-212.50  289.50,-229.50  271.50,-250.50  252.50,-268.50  236.50,-283.50  223.50,-294.50  214.50,-302.50  208.50,-308.50  197.50,-316.50  188.50,-322.50  171.50,-333.50  152.50,-346.50  135.50,-355.50  123.50,-361.50  114.50,-365.50  106.50,-366.50  102.50,-367.50  99.50,-367.50  97.50,-367.50  92.50,-367.50  82.50,-369.50  66.50,-372.50  45.50,-375.50  25.50,-380.50  10.50,-383.50  -3.50,-386.50  -17.50,-390.50  -26.50,-392.50  -38.50,-394.50  -49.50,-395.50  -58.50,-396.50  -69.50,-396.50  -80.50,-396.50  -94.50,-397.50  -106.50,-397.50  -120.50,-397.50  -132.50,-396.50  -148.50,-394.50  -161.50,-391.50  -173.50,-388.50  -185.50,-383.50  -198.50,-379.50  -210.50,-374.50  -219.50,-369.50  -225.50,-365.50  -230.50,-358.50  -238.50,-349.50  -244.50,-342.50  -246.50,-334.50  -250.50,-327.50  -253.50,-318.50  -255.50,-306.50  -258.50,-289.50  -262.50,-271.50  -265.50,-257.50  -267.50,-247.50  -267.50,-237.50  -267.50,-228.50  -267.50,-220.50  -267.50,-211.50  -267.50,-201.50  -267.50,-189.50  -264.50,-177.50  -262.50,-168.50  -258.50,-162.50  -252.50,-159.50  -245.50,-156.50  -237.50,-156.50  -228.50,-159.50  -218.50,-160.50  -201.50,-162.50  -183.50,-162.50  -166.50,-162.50  -157.50,-160.50  -153.50,-159.50  -154.50,-158.50  -160.50,-155.50  -163.50,-153.50  -163.50,-152.50  -163.50,-150.50  -159.50,-148.50  -146.50,-144.50  -124.50,-140.50  -101.50,-133.50  -91.50,-125.50  -90.50,-121.50  -93.50,-113.50  -101.50,-104.50  -107.50,-95.50  -110.50,-90.50  -111.50,-86.50  -111.50,-81.50  -109.50,-78.50  -101.50,-73.50  -91.50,-71.50  -78.50,-70.50  -64.50,-68.50  -54.50,-68.50  -47.50,-67.50  -44.50,-67.50  -42.50,-66.50  -39.50,-63.50  -37.50,-59.50  -31.50,-53.50  -24.50,-47.50  -13.50,-44.50  1.50,-44.50  17.50,-45.50  32.50,-51.50  44.50,-58.50  57.50,-65.50  67.50,-72.50  74.50,-78.50  84.50,-88.50  94.50,-103.50  101.50,-119.50  107.50,-134.50  113.50,-147.50  118.50,-156.50  124.50,-166.50  128.50,-178.50  132.50,-186.50  135.50,-192.50  140.50,-199.50  147.50,-205.50  156.50,-210.50  164.50,-213.50  174.50,-216.50  186.50,-217.50  199.50,-217.50  211.50,-215.50  220.50,-212.50  228.50,-207.50  236.50,-199.50  247.50,-190.50  256.50,-179.50  259.50,-172.50  262.50,-164.50  262.50,-156.50  262.50,-144.50  263.50,-131.50  263.50,-122.50  263.50,-115.50  263.50,-106.50  259.50,-98.50  254.50,-92.50  245.50,-81.50  234.50,-70.50  222.50,-57.50  210.50,-45.50  199.50,-37.50  186.50,-32.50  167.50,-27.50  146.50,-26.50  137.50,-26.50  127.50,-26.50  118.50,-26.50  110.50,-25.50  98.50,-24.50  84.50,-21.50  73.50,-18.50  60.50,-13.50  47.50,-9.50  32.50,-4.50  17.50,1.50  5.50,4.50  -6.50,9.50  -18.50,11.50  -27.50,14.50  -33.50,16.50  -39.50,19.50  -48.50,24.50  -55.50,28.50  -66.50,33.50  -75.50,38.50  -86.50,44.50  -93.50,50.50  -102.50,57.50  -110.50,66.50  -119.50,78.50  -124.50,89.50  -127.50,96.50  -128.50,105.50  -128.50,114.50  -124.50,127.50  -117.50,141.50  -110.50,153.50  -107.50,158.50  -104.50,159.50  -103.50,160.50 "/>
        </node>
        <node name="freehand2" position="16.00,6.00" prototype="corevector.freehand">
            <port name="path" type="string" value="M-3.50,3.50  -1.50,3.50  4.50,1.50  18.50,-0.50  38.50,-2.50  68.50,-5.50  96.50,-6.50  115.50,-6.50  124.50,-5.50  127.50,-2.50  130.50,3.50  136.50,13.50  142.50,27.50  146.50,38.50  151.50,48.50  156.50,57.50  159.50,64.50  165.50,70.50  171.50,75.50  179.50,80.50  183.50,83.50  185.50,83.50  185.50,84.50  184.50,89.50  177.50,98.50  173.50,108.50  171.50,117.50  171.50,127.50  181.50,142.50  197.50,160.50  208.50,169.50  213.50,173.50  214.50,176.50  213.50,180.50  196.50,193.50  158.50,216.50  111.50,246.50  68.50,280.50  47.50,304.50  42.50,314.50  42.50,319.50  34.50,319.50  10.50,319.50  -26.50,319.50  -72.50,319.50  -116.50,319.50  -161.50,318.50  -189.50,316.50  -196.50,315.50  -196.50,313.50  -192.50,305.50  -184.50,284.50  -180.50,266.50  -181.50,254.50  -186.50,247.50  -198.50,239.50  -211.50,232.50  -220.50,225.50  -223.50,219.50  -223.50,211.50  -217.50,198.50  -211.50,184.50  -211.50,176.50  -224.50,159.50  -238.50,138.50  -243.50,118.50  -241.50,103.50  -232.50,87.50  -206.50,58.50  -203.50,55.50  -203.50,55.50  -203.50,50.50  -203.50,46.50  -201.50,43.50  -200.50,38.50  -199.50,36.50  -199.50,35.50  -200.50,35.50  -205.50,35.50  -213.50,40.50  -218.50,45.50  -225.50,54.50  -230.50,78.50  -230.50,116.50  -225.50,147.50  -216.50,167.50  -207.50,179.50  -199.50,191.50  -197.50,194.50  -196.50,195.50  -195.50,196.50  -193.50,199.50  -193.50,200.50  -193.50,205.50  -193.50,208.50  -193.50,213.50  -193.50,218.50  -193.50,224.50  -194.50,240.50  -197.50,248.50  -200.50,256.50  -204.50,258.50  -205.50,258.50  -208.50,256.50  -211.50,254.50  -213.50,253.50  -213.50,251.50  -213.50,246.50  -213.50,243.50  -213.50,239.50  -214.50,236.50  -217.50,231.50  -220.50,228.50  -222.50,227.50  -223.50,227.50  -223.50,228.50  -224.50,229.50  -226.50,232.50  -226.50,234.50  -229.50,239.50  -229.50,240.50  -230.50,242.50  -231.50,243.50  -235.50,244.50  -240.50,244.50  -248.50,245.50  -250.50,245.50  -251.50,245.50  -252.50,245.50  -258.50,243.50  -261.50,240.50  -261.50,239.50  -262.50,239.50  -265.50,237.50  -266.50,237.50  -269.50,235.50  -270.50,235.50  -274.50,237.50  -277.50,239.50  -279.50,240.50  -280.50,240.50  -280.50,242.50  -282.50,243.50  -283.50,243.50  -284.50,243.50  -286.50,243.50  -287.50,243.50  -290.50,245.50  -291.50,245.50  -292.50,245.50  -293.50,245.50  -294.50,245.50  -298.50,243.50  -301.50,241.50  -306.50,237.50  -312.50,233.50  -315.50,229.50  -318.50,226.50  -319.50,225.50  -320.50,224.50  -321.50,223.50  -323.50,222.50  -326.50,221.50  -327.50,220.50  -329.50,220.50  -329.50,218.50  -332.50,218.50  -332.50,217.50  -332.50,215.50  -335.50,213.50  -336.50,213.50  -338.50,213.50  -338.50,213.50  -341.50,213.50  -342.50,213.50  -343.50,213.50  -344.50,214.50  -346.50,215.50  -346.50,217.50  -348.50,220.50  -348.50,223.50  -348.50,226.50  -346.50,229.50  -344.50,232.50  -339.50,238.50  -333.50,242.50  -321.50,246.50  -315.50,248.50  -311.50,249.50  -308.50,251.50  -303.50,252.50  -300.50,253.50  -298.50,255.50  -297.50,255.50  -295.50,256.50  -295.50,257.50  -292.50,258.50  -289.50,260.50  -288.50,261.50  -288.50,262.50  -286.50,263.50  -281.50,266.50  -280.50,268.50  -278.50,268.50  -278.50,269.50  -277.50,269.50  -276.50,270.50  -276.50,271.50  -276.50,273.50  -274.50,276.50  -274.50,277.50  -274.50,278.50  -274.50,279.50  -274.50,280.50  -274.50,282.50  -274.50,283.50  -274.50,284.50  -274.50,286.50  -274.50,287.50  -274.50,288.50  -274.50,289.50  -275.50,290.50  -275.50,290.50  -275.50,292.50  -276.50,293.50  -276.50,294.50  -278.50,294.50  -278.50,295.50  -279.50,296.50  -280.50,296.50  -281.50,297.50  -283.50,298.50  -286.50,299.50  -287.50,300.50  -288.50,300.50  -289.50,300.50  -290.50,300.50  -291.50,300.50  -292.50,300.50  -294.50,300.50  -300.50,300.50  -302.50,300.50  -304.50,300.50  -305.50,300.50  -306.50,300.50  -307.50,300.50  -308.50,300.50  -309.50,300.50  -312.50,300.50  -314.50,300.50  -316.50,300.50  -317.50,300.50  -317.50,301.50  -317.50,302.50  -318.50,302.50  -320.50,304.50  -320.50,305.50  -322.50,307.50  -323.50,309.50  -326.50,312.50  -327.50,313.50  -327.50,315.50  -327.50,317.50  -327.50,319.50 "/>
        </node>
        <node name="negate1" position="16.00,4.00" prototype="math.negate"/>
        <node name="number1" position="7.00,3.00" prototype="math.number">
            <port name="value" type="float" value="12.0"/>
        </node>
        <node name="number2" position="20.00,3.00" prototype="math.number">
            <port name="value" type="float" value="6.0"/>
        </node>
        <node name="range1" position="14.00,-5.00" prototype="math.range">
            <port name="end" type="float" value="360.0"/>
            <port name="step" type="float" value="0.25"/>
        </node>
        <node name="reflect1" position="8.00,11.00" prototype="corevector.reflect"/>
        <node name="reflect2" position="21.00,11.00" prototype="corevector.reflect"/>
        <node name="resample1" position="3.00,7.00" prototype="corevector.resample">
            <port name="length" type="float" value="19.0"/>
        </node>
        <node name="resample2" position="16.00,7.00" prototype="corevector.resample">
            <port name="length" type="float" value="19.0"/>
        </node>
        <node name="rotate1" position="3.00,9.00" prototype="corevector.rotate">
            <port name="angle" type="float" value="1048.0"/>
        </node>
        <node name="rotate2" position="16.00,9.00" prototype="corevector.rotate">
            <port name="angle" type="float" value="1048.0"/>
        </node>
        <node name="round_segments1" position="3.00,8.00" prototype="corevector.round_segments"/>
        <node name="round_segments2" position="16.00,8.00" prototype="corevector.round_segments"/>
        <node name="scale1" position="8.00,16.00" prototype="corevector.scale">
            <port name="scale" type="point" value="80.00,80.00"/>
        </node>
        <node name="shift1" position="14.00,-2.00" prototype="list.shift"/>
        <conn input="divide1.value2" output="number1"/>
        <conn input="copy1.copies" output="number1"/>
        <conn input="copy1.rotate" output="divide1"/>
        <conn input="compound1.shape2" output="arc1"/>
        <conn input="divide2.value1" output="divide1"/>
        <conn input="arc1.degrees" output="divide2"/>
        <conn input="reflect1.shape" output="compound1"/>
        <conn input="reflect1.angle" output="divide2"/>
        <conn input="copy1.shape" output="reflect1"/>
        <conn input="resample1.shape" output="freehand1"/>
        <conn input="round_segments1.shape" output="resample1"/>
        <conn input="colorize1.shape" output="copy1"/>
        <conn input="rotate1.shape" output="round_segments1"/>
        <conn input="compound1.shape1" output="rotate1"/>
        <conn input="first1.list" output="shift1"/>
        <conn input="shift1.amount" output="frame1"/>
        <conn input="shift1.list" output="range1"/>
        <conn input="rotate1.angle" output="first1"/>
        <conn input="divide3.value2" output="number2"/>
        <conn input="copy2.copies" output="number2"/>
        <conn input="copy2.rotate" output="divide3"/>
        <conn input="compound2.shape2" output="arc2"/>
        <conn input="divide4.value1" output="divide3"/>
        <conn input="arc2.degrees" output="divide4"/>
        <conn input="reflect2.shape" output="compound2"/>
        <conn input="reflect2.angle" output="divide4"/>
        <conn input="copy2.shape" output="reflect2"/>
        <conn input="resample2.shape" output="freehand2"/>
        <conn input="round_segments2.shape" output="resample2"/>
        <conn input="rotate2.shape" output="round_segments2"/>
        <conn input="compound2.shape1" output="rotate2"/>
        <conn input="colorize2.shape" output="copy2"/>
        <conn input="negate1.value" output="first1"/>
        <conn input="rotate2.angle" output="negate1"/>
        <conn input="combine1.list1" output="colorize1"/>
        <conn input="scale1.shape" output="colorize2"/>
        <conn input="combine1.list2" output="scale1"/>
    </node>
</ndbx>
